// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4079.RobotBuilderProject1.commands;

import edu.wpi.first.wpilibj.command.CommandGroup;
import org.usfirst.frc4079.RobotBuilderProject1.subsystems.*;

/**
 *
 */
public class CommandGroupTest extends CommandGroup {


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
    public CommandGroupTest() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
        // Add Commands here:
        // e.g. addSequential(new Command1());
        //      addSequential(new Command2());
        // these will run in order.

        // To run multiple commands at the same time,
        // use addParallel()
        // e.g. addParallel(new Command1());
        //      addSequential(new Command2());
        // Command1 and Command2 will run in parallel.

        // A command group will require all of the subsystems that each member
        // would require.
        // e.g. if Command1 requires chassis, and Command2 requires arm,
        // a CommandGroup containing them would require both the chassis and the
        // arm.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS
      // addSequential(new RaiseWrist(-1,0.3));
      // addSequential(new DriveDistance(100.0, 10));
      // addParallel(new RaiseElevator(0.5,3.0));
       //addSequential(new EjectCube(0.8,3.0));
      // addSequential(new TurnByAngle(90,3));
     //  addParallel(new DriveDistance(30,1.0));
      // addSequential(new RaiseElevator(0.8,1));
      // addSequential(new EjectCube(0.8,2));
       //addSequential(new LowerElevator(0.3,2));
       addSequential(new RaiseElevatorToHeight(700,1));
       addSequential(new EjectCube(0.8,1.0));
       addSequential(new RaiseElevatorToHeight(900,1));
    } 
}
